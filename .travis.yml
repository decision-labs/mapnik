language: generic

git:
  depth: 10
  submodules: false

env:
  global:
   - CCACHE_TEMPDIR=/tmp/.ccache-temp
   - CCACHE_COMPRESS=1
   - HEAVY_JOBS="2"
   - PREFIX=/tmp/mapnik
   - secure: "F6ivqDNMBQQnrDGA9+7IX+GDswuIqQQd7YPJdQqa2Ked9jddAQDeJClb05ig3JlwfOlYLGZOd43ZX0pKuMtI2Gbkwz211agGP9S3YunwlRg8iWtJlO5kYFUdKCmJNhjg4icfkGELCgwXn+zuEWFSLpkPcjqAFKFlQrIJeAJJgKM="

cache:
  directories:
  - $HOME/.ccache

dist: xenial

matrix:
  include:
    - os: linux
      sudo: false
      compiler: ": clang"
      env: JOBS=4 CXX="ccache g++-6" CC="gcc-6"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test']
          packages: [ 'libstdc++-6-dev', 'g++-6', 'xutils-dev']
    - os: linux
      sudo: false
      compiler: ": clang"
      env: JOBS=8 CXX="ccache clang++-5.0 -Qunused-arguments" CC="clang-5.0" TRIGGER=true
    - os: osx
      compiler: ": clang-osx"
      # https://docs.travis-ci.com/user/languages/objective-c/#Supported-OS-X-iOS-SDK-versions
      osx_image: xcode7.3 # upgrades clang from 6 -> 7
      env: JOBS=4 CXX="ccache clang++ -Qunused-arguments"

before_install:
 # workaround travis rvm bug
 # http://superuser.com/questions/1044130/why-am-i-having-how-can-i-fix-this-error-shell-session-update-command-not-f
 - |
   if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
     rvm get head || true
   fi
 - source scripts/travis-common.sh
 - export PATH=${PREFIX}/bin:$(pwd)/mason_packages/.link/bin:${PATH}
 - export COVERAGE=${COVERAGE:-false}
 - export BENCH=${BENCH:-false}
 - export ENABLE_GLIBC_WORKAROUND=${ENABLE_GLIBC_WORKAROUND:-false}
 - git_submodule_update --init

install:
 - on 'osx' export DATA_PATH=$(brew --prefix)/var/postgres
 - on 'osx' rm -rf ${DATA_PATH}
 - on 'osx' initdb ${DATA_PATH} -E utf8
 - on 'osx' pg_ctl -w start -l postgres.log --pgdata ${DATA_PATH};
 - on 'osx' cat postgres.log;
 - on 'osx' createuser -s postgres
 - on 'linux' sudo service postgresql stop;
 - on 'linux' sudo apt-get remove postgresql* -y
 - on 'linux' sudo apt-get install -y --allow-unauthenticated --no-install-recommends --no-install-suggests postgresql-10 postgresql-client-10 postgresql-server-dev-10 postgresql-common postgresql-10-postgis-2.5 postgresql-10-postgis-2.5-scripts postgis
 - on 'linux' sudo pg_dropcluster --stop 10 main  && sudo rm -rf /etc/postgresql/10 /var/lib/postgresql/10
 - on 'linux' sudo pg_createcluster -u postgres 10 main -- -A trust
 - on 'linux' sudo /etc/init.d/postgresql start 10
 - psql -c 'create database template_postgis;' -U postgres
 - psql -c 'create extension postgis;' -d template_postgis -U postgres
 - enabled ${COVERAGE} curl -S -f https://codecov.io/bash -o codecov
 - enabled ${COVERAGE} chmod +x codecov
 - export PGUSER=postgres

before_script:
 - source bootstrap.sh
 - |
   if [[ $(uname -s) == 'Linux' ]]; then
     mason install clang++ 5.0.0
     export PATH=$(mason prefix clang++ 5.0.0)/bin:${PATH}
     mason install llvm-cov 5.0.0
     export PATH=$(mason prefix llvm-cov 5.0.0)/bin:${PATH}
     which llvm-cov
     export LLVM_COV="$(mason prefix llvm-cov 5.0.0)/bin/llvm-cov"
   fi
 - ccache --version
 - ccache -p || true
 - ccache --show-stats || true
 - commit_message_parse

script:
 - export SCONSFLAGS='--debug=time'
 - configure BENCHMARK=${BENCH} ENABLE_GLIBC_WORKAROUND=${ENABLE_GLIBC_WORKAROUND:-false}
 - cat config.log
 # we limit the `make` to 40 min
 # to ensure that slow builds still upload their
 # ccache results and therefore should be faster
 # (and might work) for the next build
 - DURATION=2400
 - scripts/travis-command-wrapper.py -s "date" -i 120 --deadline=$(( $(date +%s) + ${DURATION} )) make
 - make test
 - enabled ${COVERAGE} coverage
 - enabled ${BENCH} make bench
 - ./scripts/check_glibcxx.sh

after_success:
 - enabled ${TRIGGER} trigger_downstream
